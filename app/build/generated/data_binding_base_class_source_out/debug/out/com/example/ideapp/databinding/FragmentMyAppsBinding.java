// Generated by view binder compiler. Do not edit!
package com.example.ideapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ideapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyAppsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialCardView emptyCompletedStateCard;

  @NonNull
  public final MaterialCardView emptyStateCard;

  @NonNull
  public final LinearLayout paginationCompletedContainer;

  @NonNull
  public final LinearLayout paginationInProgressContainer;

  @NonNull
  public final RecyclerView recyclerViewCompletedApps;

  @NonNull
  public final RecyclerView recyclerViewInProgress;

  @NonNull
  public final TextView tvCompletedCount;

  @NonNull
  public final TextView tvInProgressCount;

  private FragmentMyAppsBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialCardView emptyCompletedStateCard, @NonNull MaterialCardView emptyStateCard,
      @NonNull LinearLayout paginationCompletedContainer,
      @NonNull LinearLayout paginationInProgressContainer,
      @NonNull RecyclerView recyclerViewCompletedApps, @NonNull RecyclerView recyclerViewInProgress,
      @NonNull TextView tvCompletedCount, @NonNull TextView tvInProgressCount) {
    this.rootView = rootView;
    this.emptyCompletedStateCard = emptyCompletedStateCard;
    this.emptyStateCard = emptyStateCard;
    this.paginationCompletedContainer = paginationCompletedContainer;
    this.paginationInProgressContainer = paginationInProgressContainer;
    this.recyclerViewCompletedApps = recyclerViewCompletedApps;
    this.recyclerViewInProgress = recyclerViewInProgress;
    this.tvCompletedCount = tvCompletedCount;
    this.tvInProgressCount = tvInProgressCount;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyAppsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyAppsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_apps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyAppsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyCompletedStateCard;
      MaterialCardView emptyCompletedStateCard = ViewBindings.findChildViewById(rootView, id);
      if (emptyCompletedStateCard == null) {
        break missingId;
      }

      id = R.id.emptyStateCard;
      MaterialCardView emptyStateCard = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateCard == null) {
        break missingId;
      }

      id = R.id.paginationCompletedContainer;
      LinearLayout paginationCompletedContainer = ViewBindings.findChildViewById(rootView, id);
      if (paginationCompletedContainer == null) {
        break missingId;
      }

      id = R.id.paginationInProgressContainer;
      LinearLayout paginationInProgressContainer = ViewBindings.findChildViewById(rootView, id);
      if (paginationInProgressContainer == null) {
        break missingId;
      }

      id = R.id.recyclerViewCompletedApps;
      RecyclerView recyclerViewCompletedApps = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCompletedApps == null) {
        break missingId;
      }

      id = R.id.recyclerViewInProgress;
      RecyclerView recyclerViewInProgress = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewInProgress == null) {
        break missingId;
      }

      id = R.id.tvCompletedCount;
      TextView tvCompletedCount = ViewBindings.findChildViewById(rootView, id);
      if (tvCompletedCount == null) {
        break missingId;
      }

      id = R.id.tvInProgressCount;
      TextView tvInProgressCount = ViewBindings.findChildViewById(rootView, id);
      if (tvInProgressCount == null) {
        break missingId;
      }

      return new FragmentMyAppsBinding((NestedScrollView) rootView, emptyCompletedStateCard,
          emptyStateCard, paginationCompletedContainer, paginationInProgressContainer,
          recyclerViewCompletedApps, recyclerViewInProgress, tvCompletedCount, tvInProgressCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
