// Generated by view binder compiler. Do not edit!
package com.example.ideapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ideapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAdminCompletedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View bottomSpacerAdminCompleted;

  @NonNull
  public final Button btnNextPageAdminCompleted;

  @NonNull
  public final Button btnPrevPageAdminCompleted;

  @NonNull
  public final LinearLayout paginationContainerAdminCompleted;

  @NonNull
  public final ProgressBar progressBarAdminCompleted;

  @NonNull
  public final RecyclerView recyclerViewAdminCompleted;

  @NonNull
  public final TextView tvPageIndicatorAdminCompleted;

  private FragmentAdminCompletedBinding(@NonNull ConstraintLayout rootView,
      @NonNull View bottomSpacerAdminCompleted, @NonNull Button btnNextPageAdminCompleted,
      @NonNull Button btnPrevPageAdminCompleted,
      @NonNull LinearLayout paginationContainerAdminCompleted,
      @NonNull ProgressBar progressBarAdminCompleted,
      @NonNull RecyclerView recyclerViewAdminCompleted,
      @NonNull TextView tvPageIndicatorAdminCompleted) {
    this.rootView = rootView;
    this.bottomSpacerAdminCompleted = bottomSpacerAdminCompleted;
    this.btnNextPageAdminCompleted = btnNextPageAdminCompleted;
    this.btnPrevPageAdminCompleted = btnPrevPageAdminCompleted;
    this.paginationContainerAdminCompleted = paginationContainerAdminCompleted;
    this.progressBarAdminCompleted = progressBarAdminCompleted;
    this.recyclerViewAdminCompleted = recyclerViewAdminCompleted;
    this.tvPageIndicatorAdminCompleted = tvPageIndicatorAdminCompleted;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdminCompletedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdminCompletedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_admin_completed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdminCompletedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomSpacerAdminCompleted;
      View bottomSpacerAdminCompleted = ViewBindings.findChildViewById(rootView, id);
      if (bottomSpacerAdminCompleted == null) {
        break missingId;
      }

      id = R.id.btnNextPageAdminCompleted;
      Button btnNextPageAdminCompleted = ViewBindings.findChildViewById(rootView, id);
      if (btnNextPageAdminCompleted == null) {
        break missingId;
      }

      id = R.id.btnPrevPageAdminCompleted;
      Button btnPrevPageAdminCompleted = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevPageAdminCompleted == null) {
        break missingId;
      }

      id = R.id.paginationContainerAdminCompleted;
      LinearLayout paginationContainerAdminCompleted = ViewBindings.findChildViewById(rootView, id);
      if (paginationContainerAdminCompleted == null) {
        break missingId;
      }

      id = R.id.progressBarAdminCompleted;
      ProgressBar progressBarAdminCompleted = ViewBindings.findChildViewById(rootView, id);
      if (progressBarAdminCompleted == null) {
        break missingId;
      }

      id = R.id.recyclerViewAdminCompleted;
      RecyclerView recyclerViewAdminCompleted = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAdminCompleted == null) {
        break missingId;
      }

      id = R.id.tvPageIndicatorAdminCompleted;
      TextView tvPageIndicatorAdminCompleted = ViewBindings.findChildViewById(rootView, id);
      if (tvPageIndicatorAdminCompleted == null) {
        break missingId;
      }

      return new FragmentAdminCompletedBinding((ConstraintLayout) rootView,
          bottomSpacerAdminCompleted, btnNextPageAdminCompleted, btnPrevPageAdminCompleted,
          paginationContainerAdminCompleted, progressBarAdminCompleted, recyclerViewAdminCompleted,
          tvPageIndicatorAdminCompleted);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
