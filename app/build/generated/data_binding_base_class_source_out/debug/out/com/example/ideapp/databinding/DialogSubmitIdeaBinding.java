// Generated by view binder compiler. Do not edit!
package com.example.ideapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ideapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSubmitIdeaBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AutoCompleteTextView actvCategory;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnSubmit;

  @NonNull
  public final TextInputEditText etContact;

  @NonNull
  public final TextInputEditText etDescription;

  @NonNull
  public final TextInputEditText etIdeaTitle;

  @NonNull
  public final TextInputEditText etUserName;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputLayout tilCategory;

  @NonNull
  public final TextInputLayout tilContact;

  @NonNull
  public final TextInputLayout tilDescription;

  @NonNull
  public final TextInputLayout tilIdeaTitle;

  @NonNull
  public final TextInputLayout tilUserName;

  private DialogSubmitIdeaBinding(@NonNull ScrollView rootView,
      @NonNull AutoCompleteTextView actvCategory, @NonNull MaterialButton btnCancel,
      @NonNull MaterialButton btnSubmit, @NonNull TextInputEditText etContact,
      @NonNull TextInputEditText etDescription, @NonNull TextInputEditText etIdeaTitle,
      @NonNull TextInputEditText etUserName, @NonNull ProgressBar progressBar,
      @NonNull TextInputLayout tilCategory, @NonNull TextInputLayout tilContact,
      @NonNull TextInputLayout tilDescription, @NonNull TextInputLayout tilIdeaTitle,
      @NonNull TextInputLayout tilUserName) {
    this.rootView = rootView;
    this.actvCategory = actvCategory;
    this.btnCancel = btnCancel;
    this.btnSubmit = btnSubmit;
    this.etContact = etContact;
    this.etDescription = etDescription;
    this.etIdeaTitle = etIdeaTitle;
    this.etUserName = etUserName;
    this.progressBar = progressBar;
    this.tilCategory = tilCategory;
    this.tilContact = tilContact;
    this.tilDescription = tilDescription;
    this.tilIdeaTitle = tilIdeaTitle;
    this.tilUserName = tilUserName;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSubmitIdeaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSubmitIdeaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_submit_idea, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSubmitIdeaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actvCategory;
      AutoCompleteTextView actvCategory = ViewBindings.findChildViewById(rootView, id);
      if (actvCategory == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSubmit;
      MaterialButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.etContact;
      TextInputEditText etContact = ViewBindings.findChildViewById(rootView, id);
      if (etContact == null) {
        break missingId;
      }

      id = R.id.etDescription;
      TextInputEditText etDescription = ViewBindings.findChildViewById(rootView, id);
      if (etDescription == null) {
        break missingId;
      }

      id = R.id.etIdeaTitle;
      TextInputEditText etIdeaTitle = ViewBindings.findChildViewById(rootView, id);
      if (etIdeaTitle == null) {
        break missingId;
      }

      id = R.id.etUserName;
      TextInputEditText etUserName = ViewBindings.findChildViewById(rootView, id);
      if (etUserName == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tilCategory;
      TextInputLayout tilCategory = ViewBindings.findChildViewById(rootView, id);
      if (tilCategory == null) {
        break missingId;
      }

      id = R.id.tilContact;
      TextInputLayout tilContact = ViewBindings.findChildViewById(rootView, id);
      if (tilContact == null) {
        break missingId;
      }

      id = R.id.tilDescription;
      TextInputLayout tilDescription = ViewBindings.findChildViewById(rootView, id);
      if (tilDescription == null) {
        break missingId;
      }

      id = R.id.tilIdeaTitle;
      TextInputLayout tilIdeaTitle = ViewBindings.findChildViewById(rootView, id);
      if (tilIdeaTitle == null) {
        break missingId;
      }

      id = R.id.tilUserName;
      TextInputLayout tilUserName = ViewBindings.findChildViewById(rootView, id);
      if (tilUserName == null) {
        break missingId;
      }

      return new DialogSubmitIdeaBinding((ScrollView) rootView, actvCategory, btnCancel, btnSubmit,
          etContact, etDescription, etIdeaTitle, etUserName, progressBar, tilCategory, tilContact,
          tilDescription, tilIdeaTitle, tilUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
