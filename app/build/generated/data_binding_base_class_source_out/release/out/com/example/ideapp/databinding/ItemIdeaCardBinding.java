// Generated by view binder compiler. Do not edit!
package com.example.ideapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ideapp.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemIdeaCardBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button btnSendReply;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final Chip chipStatus;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final EditText etUserReply;

  @NonNull
  public final LinearLayout layoutReply;

  @NonNull
  public final TextView tvAdminComment;

  @NonNull
  public final TextView tvAdminCommentContent;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvSubmitter;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvUpvotes;

  @NonNull
  public final TextView tvUserReply;

  @NonNull
  public final TextView tvUserReplyContent;

  private ItemIdeaCardBinding(@NonNull MaterialCardView rootView, @NonNull Button btnSendReply,
      @NonNull MaterialCardView cardView, @NonNull Chip chipStatus,
      @NonNull LinearLayout contentLayout, @NonNull EditText etUserReply,
      @NonNull LinearLayout layoutReply, @NonNull TextView tvAdminComment,
      @NonNull TextView tvAdminCommentContent, @NonNull TextView tvCategory,
      @NonNull TextView tvDate, @NonNull TextView tvDescription, @NonNull TextView tvSubmitter,
      @NonNull TextView tvTitle, @NonNull TextView tvUpvotes, @NonNull TextView tvUserReply,
      @NonNull TextView tvUserReplyContent) {
    this.rootView = rootView;
    this.btnSendReply = btnSendReply;
    this.cardView = cardView;
    this.chipStatus = chipStatus;
    this.contentLayout = contentLayout;
    this.etUserReply = etUserReply;
    this.layoutReply = layoutReply;
    this.tvAdminComment = tvAdminComment;
    this.tvAdminCommentContent = tvAdminCommentContent;
    this.tvCategory = tvCategory;
    this.tvDate = tvDate;
    this.tvDescription = tvDescription;
    this.tvSubmitter = tvSubmitter;
    this.tvTitle = tvTitle;
    this.tvUpvotes = tvUpvotes;
    this.tvUserReply = tvUserReply;
    this.tvUserReplyContent = tvUserReplyContent;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemIdeaCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemIdeaCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_idea_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemIdeaCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSendReply;
      Button btnSendReply = ViewBindings.findChildViewById(rootView, id);
      if (btnSendReply == null) {
        break missingId;
      }

      MaterialCardView cardView = (MaterialCardView) rootView;

      id = R.id.chipStatus;
      Chip chipStatus = ViewBindings.findChildViewById(rootView, id);
      if (chipStatus == null) {
        break missingId;
      }

      id = R.id.contentLayout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.etUserReply;
      EditText etUserReply = ViewBindings.findChildViewById(rootView, id);
      if (etUserReply == null) {
        break missingId;
      }

      id = R.id.layoutReply;
      LinearLayout layoutReply = ViewBindings.findChildViewById(rootView, id);
      if (layoutReply == null) {
        break missingId;
      }

      id = R.id.tvAdminComment;
      TextView tvAdminComment = ViewBindings.findChildViewById(rootView, id);
      if (tvAdminComment == null) {
        break missingId;
      }

      id = R.id.tvAdminCommentContent;
      TextView tvAdminCommentContent = ViewBindings.findChildViewById(rootView, id);
      if (tvAdminCommentContent == null) {
        break missingId;
      }

      id = R.id.tvCategory;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvSubmitter;
      TextView tvSubmitter = ViewBindings.findChildViewById(rootView, id);
      if (tvSubmitter == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvUpvotes;
      TextView tvUpvotes = ViewBindings.findChildViewById(rootView, id);
      if (tvUpvotes == null) {
        break missingId;
      }

      id = R.id.tvUserReply;
      TextView tvUserReply = ViewBindings.findChildViewById(rootView, id);
      if (tvUserReply == null) {
        break missingId;
      }

      id = R.id.tvUserReplyContent;
      TextView tvUserReplyContent = ViewBindings.findChildViewById(rootView, id);
      if (tvUserReplyContent == null) {
        break missingId;
      }

      return new ItemIdeaCardBinding((MaterialCardView) rootView, btnSendReply, cardView,
          chipStatus, contentLayout, etUserReply, layoutReply, tvAdminComment,
          tvAdminCommentContent, tvCategory, tvDate, tvDescription, tvSubmitter, tvTitle, tvUpvotes,
          tvUserReply, tvUserReplyContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
